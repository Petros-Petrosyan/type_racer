{"version":3,"sources":["store/game/reducer.js","constants/gameStatus.js","store/history/reducer.js","services/httpServices/text.js","services/httpServices/history.js","services/httpServices/index.js","store/game/action.js","store/action-types.js","store/game/saga.js","store/history/action.js","store/history/saga.js","store/saga.js","store/store.js","containers/Routers.js","components/Keyboard/KeyboardButton/KeyboardButton.js","components/Keyboard/Keyboard.js","components/Result/Result.js","components/Timer/Timer.js","components/ShowInfo/ShowInfo.js","components/ViewText/Letter/Letter.js","components/ViewText/ViewText.js","components/ViewHistory/ViewHistory.js","containers/TypeRacer/TypeRacer.js","constants/kayboard.js","containers/KeyboardSection/KeyboardSection.js","containers/ResultSection/ResultSection.js","containers/TextSection/TextSection.js","containers/History/History.js","index.js","containers/TypeRacer/TypeRacer.module.scss","components/ViewText/Letter/Letter.module.scss","containers/History/History.module.scss","components/Keyboard/KeyboardButton/KeyboardButton.module.scss","components/Timer/Timer.module.scss","components/Keyboard/Keyboard.module.scss","components/ViewHistory/ViewHistory.module.scss","components/Result/Result.module.scss","components/ShowInfo/ShowInfo.module.scss","components/ViewText/ViewText.module.scss","assets/images/keyboard.webp","containers/ResultSection/ResultSection.module.scss","containers/TextSection/TextSection.module.scss"],"names":["initialState","game","gameStatus","finishGame","time","textInfo","text","loading","exist","currentIndex","writtenLetter","errors","startGame","state","update","$merge","changeTime","payload","writeLetter","letter","changeCurrentIndex","index","collectErrors","error","newErrors","includes","push","getTextStart","getTextSuccess","getTextFail","history","historyList","historyCreate","getHistoryStart","getHistorySuccess","getHistoryFail","createHistoryStart","createHistorySuccess","createHistoryFail","getTextRequest","sentences","a","baseRequest","get","params","type","res","data","createHistoryRequest","historyRequest","post","getHistoryRequest","axios","create","baseURL","getText","gameSaga","action","put","console","log","all","takeEvery","getHistory","createHistory","historySaga","Error","watchSaga","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","gameReducer","historyReducer","store","createStore","applyMiddleware","run","Routers","exact","path","component","TypeRacer","History","KeyboardButton","props","useState","classes","keyboardButton","keyboardClasses","setKeyboardClasses","id","value","style","src","onChangeCurrentIndex","onWriteLetter","onFinishGame","onCollectErrors","useEffect","createEventListener","removeEventListener","onKeyDown","event","keyCode","newKeyboardClasses","$splice","isSubmit","onKeyUp","key","length","document","addEventListener","className","classNames","pt","alt","Keyboard","keyboardButtons","keyboard","Object","keys","map","sectionKey","keyboardButtonEls","sectionValue","keyboard__section","Result","status","gameFinish","onCreateHistory","viewErrorCount","completionPercent","Math","ceil","wpm","round","speed","errorCount","result","Timer","initialTime","onFinish","onChange","setTime","startClock","_time","tik","setTimeout","timer","orangeBg","redBg","ShowInfo","showText","Letter","currentLetter","isError","space","current","ViewText","letters","split","i","center","ViewHistory","historySection__history","historySection","this","startBtn","main__startBtn","onClick","checkoutButton","disabled","main__history","to","main","main__title","React","Component","TypeRacerWrapper","connect","dispatch","getTextInit","KEYBOARD_BUTTONS","section1","paddingLeft","paddingRight","section2","section3","section4","section5","margin","KeyboardSection","viewKeyboard","textAlign","KeyboardSectionWrapper","ResultSection","onChangeTime","resultSection","ResultSectionWrapper","createHistoryInit","TextSection","viewText","textContainer","TextSectionWrapper","viewHistory","values","noHistory","history__title","history__game","HistoryWrapper","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"oNAsBMA,EAAe,CACjBC,KAAM,CACFC,WCxBY,EDyBZC,YAAY,EACZC,KAAM,IAEVC,SAAU,CACNC,KAAM,mCACNC,SAAS,EACTC,OAAO,EACPC,aAAc,EACdC,cAAe,KACfC,OAAQ,KAIVC,EAAY,SAACC,GACf,OAAOC,IAAOD,EAAO,CACjBZ,KAAM,CAACc,OAAQ,CACPb,WCxCW,EDyCXC,YAAY,IAEpBE,SAAU,CAACU,OAAQ,CACXN,aAAc,EACdC,cAAe,KACfC,OAAQ,QAKlBR,EAAa,SAACU,GAChB,OAAOC,IAAOD,EAAO,CACjBZ,KAAM,CAACc,OAAQ,CACPb,WCvDI,EDwDJC,YAAY,OAKtBa,EAAa,SAACH,EAAOI,GAAa,IAC7Bb,EAAQa,EAARb,KACP,OAAOU,IAAOD,EAAO,CACjBZ,KAAM,CAACc,OAAQ,CACPZ,YAAY,EACZC,YAKVc,EAAc,SAACL,EAAOI,GAAa,IAC9BE,EAAUF,EAAVE,OACP,OAAOL,IAAOD,EAAO,CACjBR,SAAU,CAACU,OAAQ,CACXL,cAAeS,IAEvBlB,KAAM,CAACc,OAAQ,CACPZ,YAAY,OAItBiB,EAAqB,SAACP,EAAOI,GAAa,IACrCI,EAASJ,EAATI,MACP,OAAOP,IAAOD,EAAO,CACjBR,SAAU,CAACU,OAAQ,CACXN,aAAcY,IAEtBpB,KAAM,CAACc,OAAQ,CACPZ,YAAY,OAKtBmB,EAAgB,SAACT,EAAOI,GAAa,IAChCM,EAASN,EAATM,MACDC,EAAS,YAAOX,EAAMR,SAASM,QAKrC,OAJKa,EAAUC,SAASF,IACpBC,EAAUE,KAAKH,GAGZT,IAAOD,EAAO,CACjBR,SAAU,CAACU,OAAQ,CACXJ,OAAQa,IAEhBvB,KAAM,CAACc,OAAQ,CACPZ,YAAY,OAKtBwB,EAAe,SAACd,GAClB,OAAOC,IAAOD,EAAO,CACjBR,SAAU,CAACU,OAAQ,CACXR,SAAS,EACTC,OAAO,IAEfP,KAAM,CAACc,OAAQ,CACPZ,YAAY,OAItByB,EAAiB,SAACf,EAAOI,GAAa,IACjCX,EAAQW,EAARX,KACP,OAAOQ,IAAOD,EAAO,CACjBR,SAAU,CAACU,OAAQ,CACXT,OACAC,SAAS,EACTC,OAAO,OAIjBqB,EAAc,SAAChB,GACjB,OAAOC,IAAOD,EAAO,CACjBR,SAAU,CAACU,OAAQ,CACXR,SAAS,EACTC,OAAO,OE3HjBR,EAAe,CACjB8B,QAAS,CACLC,YAAa,KACbxB,SAAS,EACTC,OAAO,GAEXwB,cAAe,CACXzB,SAAS,IAIX0B,EAAkB,SAACpB,GACrB,OAAOC,IAAOD,EAAO,CACjBiB,QAAS,CAACf,OAAQ,CACVR,SAAS,EACTC,OAAO,OAIjB0B,EAAoB,SAACrB,EAAOI,GAAa,IACpCa,EAAWb,EAAXa,QACP,OAAOhB,IAAOD,EAAO,CACjBiB,QAAS,CAACf,OAAQ,CACVgB,YAAaD,EACbvB,SAAS,EACTC,OAAO,OAIjB2B,EAAiB,SAACtB,GACpB,OAAOC,IAAOD,EAAO,CACjBiB,QAAS,CAACf,OAAQ,CACVR,SAAS,EACTC,OAAO,OAKjB4B,EAAqB,SAACvB,GACxB,OAAOC,IAAOD,EAAO,CACjBmB,cAAe,CAACjB,OAAQ,CAChBR,SAAS,OAInB8B,EAAuB,SAACxB,GAC1B,OAAOC,IAAOD,EAAO,CACjBmB,cAAe,CAACjB,OAAQ,CAChBR,SAAS,OAInB+B,EAAoB,SAACzB,GACvB,OAAOC,IAAOD,EAAO,CACjBmB,cAAe,CAACjB,OAAQ,CAChBR,SAAS,O,wDClEZgC,EAAc,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACRC,EAAYC,IAAI,IAAK,CACnCC,OAAQ,CACJC,KAAM,WACNL,eAJkB,cACpBM,EADoB,yBAOnBA,EAAIC,KAAK,IAPU,2CAAH,sDCAdC,EAAoB,uCAAG,WAAOlB,GAAP,eAAAW,EAAA,sEACdQ,EAAeC,KAAK,eAAgBpB,GADtB,cAC1BgB,EAD0B,yBAEzBA,GAFyB,2CAAH,sDAKpBK,EAAiB,uCAAG,WAAOrB,GAAP,eAAAW,EAAA,sEACXQ,EAAeN,IAAI,gBADR,cACvBG,EADuB,yBAEtBA,EAAIC,MAFkB,2CAAH,sDCLjBL,EAAcU,IAAMC,OAAO,CACpCC,QAAS,+BAGAL,EAAiBG,IAAMC,OAAO,CACvCC,QAAS,4CCyDA1B,EAAiB,SAACtB,GAC3B,MAAO,CACHuC,KCvDwB,mBDwDxB5B,QAAS,CAACX,U,WE9CRiD,G,WAYOC,GAZjB,SAAUD,EAAQE,GAAlB,yEAEI,OADiBjB,EAAciB,EAAxBxC,QAAUuB,UADrB,SAEUkB,YFqCC,CACHb,KCnDsB,mBCW9B,OAIqB,OAJrB,kBAI2BN,EAAeC,GAJ1C,OAKQ,OADMlC,EAJd,gBAKcoD,YAAI9B,EAAetB,IALjC,yDAOQqD,QAAQC,IAAI,mBACZF,YF0CG,CACHb,KC5DqB,kBCS7B,sDAYO,SAAUW,IAAV,iEACH,OADG,SACGK,YAAI,CACNC,YD1BqB,gBC0BIP,KAF1B,uCCpBA,IAUMrB,EAAoB,SAACJ,GAC9B,MAAO,CACHe,KFR2B,sBES3B5B,QAAS,CAACa,a,WCKRiC,G,WAcAC,G,WAaOC,GA3BjB,SAAUF,IAAV,uEACI,OADJ,SACUL,YDbC,CACHb,KFJyB,sBGejC,OAGwB,OAHxB,kBAG8BM,IAH9B,UAGcrB,EAHd,6BAKkB,IAAIoC,MAAM,gBAL5B,OAOQ,OAPR,UAOcR,YAAIxB,EAAkBJ,IAPpC,gCAUQ,OAVR,0BASQ6B,QAAQC,IAAI,mBATpB,UAUcF,YDXH,CACHb,KFbwB,qBGahC,sDAcA,SAAUmB,EAAcP,GAAxB,uEAEI,OADiB3B,EAAY2B,EAAtBxC,QAAUa,QADrB,SAEU4B,YDLC,CACHb,KFrB4B,yBGuBpC,OAIQ,OAJR,kBAIcG,EAAqBlB,GAJnC,OAKQ,OALR,SAKc4B,YDHH,CACHb,KFzB8B,2BGsBtC,+BAQQ,OARR,0BAOQc,QAAQC,IAAI,mBAPpB,UAQcF,YDDH,CACHb,KF7B2B,wBGqBnC,sDAaO,SAAUoB,IAAV,iEACH,OADG,SACGJ,YAAI,CACNC,YH7CwB,mBG6CIC,GAC5BD,YHxC2B,sBGwCIE,KAHhC,uC,eClDUG,IAAV,SAAUA,KAAV,iEACH,OADG,SACGN,YAAI,CACNL,IACAS,MAHD,uCCMP,IAAMG,GAAiBC,cAEjBC,GAAcC,YAAgB,CAChCC,YZ4HgB,WAAmC,IAAlC3D,EAAiC,uDAAzBb,EAAcyD,EAAW,uCAC3CZ,EAAiBY,EAAjBZ,KAAM5B,EAAWwC,EAAXxC,QACb,OAAQ4B,GACJ,IO/IkB,aP+ID,OAAOjC,EAAUC,GAClC,IO/ImB,cP+ID,OAAOV,EAAWU,GACpC,IO/IoB,eP+ID,OAAOK,EAAYL,EAAOI,GAC7C,IO/I4B,uBP+ID,OAAOG,EAAmBP,EAAOI,GAC5D,IO/IsB,iBP+ID,OAAOK,EAAcT,EAAOI,GACjD,IO/ImB,cP+ID,OAAOD,EAAWH,EAAOI,GAE3C,IO7IsB,iBP6ID,OAAOU,EAAad,GACzC,IO7IwB,mBP6ID,OAAOe,EAAef,EAAOI,GACpD,IO7IqB,gBP6ID,OAAOY,EAAYhB,GAEvC,QAAS,OAAOA,IYzIpB4D,eVwDmB,WAAmC,IAAlC5D,EAAiC,uDAAzBb,EAAcyD,EAAW,uCAC9CZ,EAAiBY,EAAjBZ,KAAM5B,EAAWwC,EAAXxC,QACb,OAAQ4B,GACJ,IK7DyB,oBL6DD,OAAOZ,EAAgBpB,GAC/C,IK7D2B,sBL6DD,OAAOqB,EAAkBrB,EAAOI,GAC1D,IK7DwB,mBL6DD,OAAOkB,EAAetB,GAE7C,IK3D4B,uBL2DD,OAAOuB,EAAmBvB,GACrD,IK3D8B,yBL2DD,OAAOwB,EAAqBxB,GACzD,IK3D2B,sBL2DD,OAAOyB,EAAkBzB,GAEnD,QAAS,OAAOA,MUhEX6D,GAAQC,YACjBL,GACAM,YAAgBR,KAGpBA,GAAeS,IAAIV,I,qBCVbW,GAAU,WACZ,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,kBAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWE,Q,6HCZlDC,GAAiB,SAACC,GAAW,IAAD,EACgBC,mBAAS,CAACC,KAAQC,iBADlC,oBACvBC,EADuB,KACNC,EADM,KAG1BC,EAUAN,EAVAM,GACAC,EASAP,EATAO,MACAC,EAQAR,EARAQ,MACAC,EAOAT,EAPAS,IACArF,EAMA4E,EANA5E,aACAH,EAKA+E,EALA/E,KACAyF,EAIAV,EAJAU,qBACAC,EAGAX,EAHAW,cACAC,EAEAZ,EAFAY,aACAC,EACAb,EADAa,gBAGJC,qBAAU,WAEN,OADAC,IACO,kBAAMC,QAGjB,IAAMC,EAAY,SAACC,GACf,GAAIZ,IAAOY,EAAMC,QAAS,CACtB,IAAMC,EAAqB3F,IAAO2E,EAAiB,CAC/CiB,QAAS,CAAC,CAAC,EAAG,EAAGnB,KAAQoB,aAE7BjB,EAAmBe,KAGrBG,EAAU,SAACL,GAAW,IACjBM,EAAgBN,EAAhBM,IAAKL,EAAWD,EAAXC,QACZ,GAAIb,IAAOa,EAAS,CAChBR,EAAca,GAEd,IAAMJ,EAAqB3F,IAAO2E,EAAiB,CAC/CiB,QAAS,CAAC,CAACjB,EAAgBqB,OAAO,EAAG,MAEzCpB,EAAmBe,GAEfhG,IAAiBH,EAAKwG,OAAO,EAC7Bb,KAEI3F,EAAKG,KAAkBoG,GACvBd,EAAqBtF,EAAe,GAEpCH,EAAKG,KAAkBoG,GAAe,UAARA,GACH,MAAvBvG,EAAKG,IACLyF,EAAgBzF,MAO9B2F,EAAsB,WACxBW,SAASC,iBAAiB,UAAWV,GACrCS,SAASC,iBAAiB,QAASJ,IAGjCP,EAAsB,WACxBU,SAASV,oBAAoB,UAAWC,GACxCS,SAASV,oBAAoB,QAASO,IAG1C,OACI,0BACIjB,GAAIA,EACJE,MAAOA,EACPoB,UAAWC,KAAWzB,IAErBK,EAAM,yBAAKA,IAAKA,EAAKmB,UAAW1B,KAAQ4B,GAAIC,IAAI,eAAkBxB,ICrEzEyB,GAAW,SAAChC,GAAW,IAErBiC,EAOAjC,EAPAiC,gBACA7G,EAMA4E,EANA5E,aACAH,EAKA+E,EALA/E,KACAyF,EAIAV,EAJAU,qBACAC,EAGAX,EAHAW,cACAC,EAEAZ,EAFAY,aACAC,EACAb,EADAa,gBAIEqB,EAFcC,OAAOC,KAAKH,GAG3BI,KAAI,SAAAC,GACD,IAAMC,EAAoBN,EAAgBK,GACrCD,KAAI,SAAAG,GAAY,OACb,kBAAC,GAAD,eACIhB,IAAKgB,EAAalC,GAClBlF,aAAcA,EACdH,KAAMA,EACNyF,qBAAsBA,EACtBC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,GACb2B,OAGhB,OACI,yBAAKhB,IAAKc,EAAYV,UAAW1B,KAAQuC,mBACpCF,MAKjB,OACI,6BAASX,UAAW1B,KAAQgC,UACvBA,I,oBCpCPQ,GAAS,SAAC1C,GAAW,IAEnBjF,EAOAiF,EAPAjF,KACA4H,EAMA3C,EANA2C,OACA1H,EAKA+E,EALA/E,KACAG,EAIA4E,EAJA5E,aACAE,EAGA0E,EAHA1E,OACAsH,EAEA5C,EAFA4C,WACAC,EACA7C,EADA6C,gBAGEC,EAAiBxH,EAAOmG,OAC1BsB,EAAqB3H,EAAeH,EAAKwG,OAAU,IACvDsB,EAAoBC,KAAKC,KAAKF,GAC1B3H,IAAiBH,EAAKwG,OAAS,IAC/BsB,EAAoB,KAGxB,IAAIG,EAAM,GACW,IAAjB9H,GAA+B,KAATL,IACtBmI,EAAMF,KAAKG,MAAO/H,EAAa,IAAO,GAAKL,GAAM,Mf7BrC,IegCZ4H,GAAmBC,IAMnBC,EALgB,CACZO,MAAOF,EACPG,WAAYP,EACZC,kBAAmBA,IAK3B,OACI,6BACI,yBAAKnB,UAAW1B,KAAQoD,QACpB,wCAAa,gCAASJ,EAAT,SACb,qDAA0B,gCAASH,EAAT,OAC1B,yCAAc,gCAASD,O,6BCpCjCS,GAAQ,SAACvD,GAAW,IAAD,EAEjB2C,EAIA3C,EAJA2C,OACAa,EAGAxD,EAHAwD,YACAC,EAEAzD,EAFAyD,SACAC,EACA1D,EADA0D,SALiB,EAQGzD,mBAASuD,GARZ,oBAQdzI,EARc,KAQR4I,EARQ,KAUrB7C,qBAAU,WhBnBa,IgBoBf6B,GACAiB,MAEL,IAEH9C,qBAAU,WACO,IAAT/F,EACA0I,KAEAG,EAAW7I,GACX2I,EAAS3I,MAGd,CAACA,IAEJ+F,qBAAU,WhBnCa,IgBoCf6B,GACAiB,EAAWJ,KAEhB,CAACb,IAEJ,IAAMiB,EAAa,WAAmB,IAAlBC,EAAiB,uDAAT9I,EACpB8I,IAAU9I,GACV4I,EAAQE,GAEZ,IAAMC,EAAM,WACRC,YAAW,WhB9CI,IgB+CPpB,GACAgB,EAAQE,EAAQ,KAErB,MAEPC,KAGJ,OAAO,yBACHlC,UACIC,KAAW3B,KAAQ8D,OAAT,oBACL9D,KAAQ+D,SAAWlJ,GAAQ,IADtB,eAELmF,KAAQgE,MAAiB,IAATnJ,GAFX,KAMbA,I,oBC1DHoJ,GAAW,WACb,OACI,6BAASvC,UAAW1B,KAAQkE,UACxB,kDACA,oL,wCCHNC,GAAS,SAACrE,GAAW,IAAD,EAElBlE,EAGAkE,EAHAlE,OACAwI,EAEAtE,EAFAsE,cACAC,EACAvE,EADAuE,QAGJ,OACI,0BACI3C,UACIC,KAAW3B,KAAQpE,QAAT,oBACLoE,KAAQsE,MAAmB,MAAX1I,GADX,eAELoE,KAAQuE,QAAUH,GAFb,eAGLpE,KAAQhE,MAAQqI,GAHX,KAObzI,ICfP4I,GAAW,SAAC1E,GAAW,IAErB5E,EAGA4E,EAHA5E,aACAH,EAEA+E,EAFA/E,KACAK,EACA0E,EADA1E,OAGEqJ,EAAU1J,EAAK2J,MAAM,IAAIvC,KAAI,SAACvG,EAAO+I,GACvC,IAAMP,EAAgBlJ,IAAiByJ,EAEvC,OACI,kBAAC,GAAD,CACIrD,IAAK1F,EAAO+I,EACZ/I,OAAQA,EACRwI,cAAeA,EACfC,QAASjJ,EAAOc,SAASyI,QAKrC,OACI,yBAAKjD,UAAW1B,KAAQ4E,QACnBH,I,oBCzBPI,GAAc,SAAC/E,GAAW,IAGtBvD,EAFgBuD,EAAftD,YAEqB2F,KAAI,SAAC5F,EAASoI,GAAO,IACvC9B,EAAwCtG,EAAxCsG,kBAAmBM,EAAqB5G,EAArB4G,WAAYD,EAAS3G,EAAT2G,MACtC,OACI,yBAAK5B,IAAKqD,EAAGjD,UAAW1B,KAAQ8E,yBAC5B,qCAAWH,EAAE,GACb,qCAAWzB,EAAX,QACA,kDAAwBL,EAAxB,MACA,sCAAYM,OAKvB,OACI,6BAASzB,UAAW1B,KAAQ+E,gBACvBxI,ICEPoD,G,2KACQ,IAAD,EAKDqF,KAAKlF,MAHLzE,EAFC,EAEDA,UACA2C,EAHC,EAGDA,QACAyE,EAJC,EAIDA,OAQAwC,EAAW,KrBtCH,IqBuCRxC,IACAwC,EACI,yBAAKvD,UAAW1B,KAAQkF,gBACpB,0BAAMC,QATJ,WACV9J,IACA2C,EAAQ,KAOA,iCAKZ,IAAIoH,EACA,yBAAK1D,UAAW1B,KAAQqF,UACpB,kEAWR,OrB5DY,IqBoDR5C,IACA2C,EACI,yBAAK1D,UAAW1B,KAAQsF,eACpB,kBAAC,KAAD,CAAMC,GAAG,YAAT,qCAMR,0BAAM7D,UAAW1B,KAAQwF,MACrB,wBAAI9D,UAAW1B,KAAQyF,aAAvB,cACCL,EACD,kBAAC,GAAD,MACA,kBAAC,GAAD,MACCH,EACD,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GA3CQS,IAAMC,WA6DxBC,GAAmBC,aAZD,SAACvK,GACrB,MAAO,CACHmH,OAAQnH,EAAM2D,YAAYvE,KAAKC,eAGZ,SAACmL,GACxB,MAAO,CACHzK,UAAW,kBAAMyK,EhBjEd,CACHxI,KChBkB,gBeiFlBU,QAAS,SAACf,GAAD,OAAe6I,EhB7BL,SAAC7I,GACxB,MAAO,CACHK,KC9CqB,gBD+CrB5B,QAAS,CAACuB,cgB0BuB8I,CAAY9I,QAI5B4I,CAA6ClG,I,oBCtFzDqG,GAAmB,CAC5BC,SAAU,CACN,CAAC7F,GAAI,IAAKC,MAAO,KACjB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,IAAKC,MAAO,KACjB,CAACD,GAAI,IAAKC,MAAO,KACjB,CACID,GAAI,EACJG,IAAK,iEACLD,MAAO,CAAC4F,YAAa,OAASC,aAAa,UAGnDC,SAAU,CACN,CACIhG,GAAI,EACJC,MAAO,MACPC,MAAO,CAAC4F,YAAa,OAASC,aAAa,SAE/C,CAAC/F,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,IAAKC,MAAO,KACjB,CAACD,GAAI,IAAKC,MAAO,KACjB,CAACD,GAAI,IAAKC,MAAO,OAErBgG,SAAU,CACN,CACIjG,GAAI,GACJC,MAAO,OACPC,MAAO,CAAC4F,YAAa,OAASC,aAAa,SAE/C,CAAC/F,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,IAAKC,MAAO,KACjB,CAACD,GAAI,IAAKC,MAAO,KACjB,CACID,GAAI,GACJC,MAAO,QACPC,MAAO,CAAC4F,YAAa,OAASC,aAAa,UAGnDG,SAAU,CACN,CACIlG,GAAI,GACJC,MAAO,QACPC,MAAO,CAAC4F,YAAa,OAASC,aAAa,SAE/C,CAAC/F,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,GAAIC,MAAO,KAChB,CAACD,GAAI,IAAKC,MAAO,KACjB,CAACD,GAAI,IAAKC,MAAO,KACjB,CAACD,GAAI,IAAKC,MAAO,KACjB,CACID,GAAI,KACJC,MAAO,QACPC,MAAO,CAAC4F,YAAa,OAASC,aAAc,UAGpDI,SAAU,CACN,CACInG,GAAI,GACJC,MAAO,GACPC,MAAO,CAAC4F,YAAa,QAAUC,aAAa,QAAUK,OAAQ,WCpEpEC,G,+MACF7L,WAAa,YAET8F,EADuB,EAAKZ,MAArBY,iB,wDAID,IAAD,EAQDsE,KAAKlF,MANL2C,EAFC,EAEDA,OACAvH,EAHC,EAGDA,aACAH,EAJC,EAIDA,KACA0F,EALC,EAKDA,cACAD,EANC,EAMDA,qBACAG,EAPC,EAODA,gBAGA+F,EAAe,yBAAKpG,MAAO,CAACqG,UAAW,WAAW,yBAAKpG,IAAKyB,KAAUH,IAAI,cAe9E,OvBpDmB,IuBsCfY,IACAiE,EACI,kBAAC,GAAD,CACI3E,gBAAiBiE,GACjB9K,aAAcA,EACdH,KAAMA,EACNyF,qBAAsBA,EACtBC,cAAeA,EACfC,aAAcsE,KAAKpK,WACnB+F,gBAAiBA,KAKtB+F,M,GA/BehB,IAAMC,WAoD9BiB,GAAyBf,aAhBP,SAACvK,GACrB,MAAO,CACHmH,OAAQnH,EAAM2D,YAAYvE,KAAKC,WAC/BO,aAAcI,EAAM2D,YAAYnE,SAASI,aACzCH,KAAMO,EAAM2D,YAAYnE,SAASC,SAGd,SAAC+K,GACxB,MAAO,CACHrF,cAAe,SAAC7E,GAAD,OAAYkK,ElBlCR,SAAClK,GACxB,MAAO,CACH0B,KChCoB,eDiCpB5B,QAAS,CAACE,WkB+B0BD,CAAYC,KAChD4E,qBAAsB,SAAC1E,GAAD,OAAWgK,ElB7BP,SAAChK,GAC/B,MAAO,CACHwB,KCrC4B,uBDsC5B5B,QAAS,CAACI,UkB0BgCD,CAAmBC,KAC7D4E,aAAc,kBAAMoF,ElBhDjB,CACHxI,KCpBmB,iBiBoEnBqD,gBAAiB,SAAC3E,GAAD,OAAW8J,ElBxBP,SAAC9J,GAC1B,MAAO,CACHsB,KC3CsB,iBD4CtB5B,QAAS,CAACM,UkBqB2BD,CAAcC,QAI5B6J,CAA6CY,I,oBCzDtEI,G,+MACFpI,cAAgB,SAAClC,IAEboG,EAD0B,EAAK7C,MAAxB6C,iBACSpG,I,wDAGV,IAAD,EAUDyI,KAAKlF,MARLjF,EAFC,EAEDA,KACA4H,EAHC,EAGDA,OACAC,EAJC,EAIDA,WACA3H,EALC,EAKDA,KACAG,EANC,EAMDA,aACAE,EAPC,EAODA,OACAR,EARC,EAQDA,WACAkM,EATC,EASDA,aAGJ,OACQ,6BAASpF,UAAW1B,KAAQ+G,eACxB,kBAAC,GAAD,CACIlM,KAAMA,EACN6H,WAAYA,EACZD,OAAQA,EACR1H,KAAMA,EACNG,aAAcA,EACdE,OAAQA,EACRuH,gBAAiBqC,KAAKvG,gBAE1B,kBAAC,GAAD,CACI8E,SAAU3I,EACV6H,OAAQA,EACRa,YAAa,GACbE,SAAUsD,S,GAjCNpB,IAAMC,WA0D5BqB,GAAuBnB,aAlBL,SAACvK,GACrB,MAAO,CACHmH,OAAQnH,EAAM2D,YAAYvE,KAAKC,WAC/B+H,WAAYpH,EAAM2D,YAAYvE,KAAKE,WACnCC,KAAMS,EAAM2D,YAAYvE,KAAKG,KAC7BE,KAAMO,EAAM2D,YAAYnE,SAASC,KACjCG,aAAcI,EAAM2D,YAAYnE,SAASI,aACzCE,OAAQE,EAAM2D,YAAYnE,SAASM,WAGhB,SAAC0K,GACxB,MAAO,CACHlL,WAAY,kBAAMkL,EnBhDf,CACHxI,KCpBmB,iBkBoEnBqF,gBAAiB,SAACpG,GAAD,OAAauJ,EhBnCL,SAACvJ,GAC9B,MAAO,CACHe,KFhB2B,sBEiB3B5B,QAAS,CAACa,YgBgC6B0K,CAAkB1K,KACzDuK,aAAc,SAACjM,GAAD,OAAUiL,EnB7CN,SAACjL,GACvB,MAAO,CACHyC,KCtBmB,cDuBnB5B,QAAS,CAACb,SmB0CuBY,CAAWZ,QAIvBgL,CAA6CgB,I,wCChEpEK,G,2KACQ,IAAD,EAKDlC,KAAKlF,MALJ,IAEDhF,SAAWE,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,MAAOF,EAF1B,EAE0BA,KAC3BG,EAHC,EAGDA,aACAE,EAJC,EAIDA,OAGA+L,EAAW,KAcf,OAbInM,IACAmM,EAAW,yBAAK7G,MAAO,CAACqG,UAAW,WAAW,kBAAC,KAAD,QAE9C1L,IACAkM,EACI,kBAAC,GAAD,CACIjM,aAAcA,EACdH,KAAMA,EACNK,OAAQA,KAKb,yBAAKsG,UAAW1B,KAAQoH,eAAgBD,O,GAtB7BzB,IAAMC,WAmC1B0B,GAAqBxB,aARH,SAACvK,GACrB,MAAO,CACHR,SAAUQ,EAAM2D,YAAYnE,SAC5BI,aAAcI,EAAM2D,YAAYnE,SAASI,aACzCE,OAAQE,EAAM2D,YAAYnE,SAASM,UAIS,KAAzByK,CAA+BqB,I,wCC/BpDtH,G,uLAGEpB,EADqBwG,KAAKlF,MAAnBtB,gB,+BAID,IAGF8I,EAHC,EAC4CtC,KAAKlF,MAA/CvD,QAAUC,EADZ,EACYA,YAAaxB,EADzB,EACyBA,QAG9B,GAJK,EACkCC,MAG5B,CACP,IAAMsB,EAAU0F,OAAOsF,OAAO/K,GAC9B8K,EAAc,kBAAC,GAAD,CAAa9K,YAAaD,SAExC+K,EAAc,yBAAK5F,UAAW1B,KAAQwH,WAAxB,uBAMlB,OAJIxM,IACAsM,EAAc,yBAAKhH,MAAO,CAACqG,UAAW,WAAW,kBAAC,KAAD,QAI7C,0BAAMjF,UAAW1B,KAAQzD,SACrB,wBAAImF,UAAW1B,KAAQyH,gBAAvB,WACA,yBAAK/F,UAAW1B,KAAQ0H,eACpB,kBAAC,KAAD,CAAMnC,GAAG,KAAT,mCAGH+B,O,GA3BC5B,IAAMC,WA6CtBgC,GAAiB9B,aAZC,SAACvK,GACrB,MAAO,CACHiB,QAASjB,EAAM4D,eAAe3C,YAGX,SAACuJ,GACxB,MAAO,CACHtH,WAAY,kBAAMsH,ElBzCf,CACHxI,KFAwB,yBoB6CTuI,CAA6CjG,I,OCpDpEgI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAU3I,MAAOA,IACb,kBAAC,GAAD,QAGRqC,SAASuG,eAAe,U,mBCb1BC,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAc,+BAA+B,cAAgB,iCAAiC,eAAiB,kCAAkC,SAAW,8B,mBCA7MD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,wBAAwB,MAAQ,wB,mBCA1HD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,UAAY,6B,mBCAjKD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,SAAW,iCAAiC,GAAK,6B,mBCA3HD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,SAAW,wBAAwB,MAAQ,uB,mBCA1FD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,kBAAoB,sC,mBCA5ED,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,wBAA0B,+C,mBCAjGD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,OAAS,2B,mBCD3BD,EAAOC,QAAU,IAA0B,uC,mBCC3CD,EAAOC,QAAU,CAAC,cAAgB,uC,mBCAlCD,EAAOC,QAAU,CAAC,cAAgB,qC","file":"static/js/main.0e65bdd0.chunk.js","sourcesContent":["import update from 'react-addons-update';\n\n// game status\nimport {\n    IN_PROGRESS,\n    INIT,\n} from '../../constants/gameStatus';\n\n// action types\nimport {\n    START_GAME,\n    FINISH_GAME,\n    WRITE_LETTER,\n    CHANGE_CURRENT_INDEX,\n    COLLECT_ERRORS,\n    CHANGE_TIME,\n\n    GET_TEXT_START,\n    GET_TEXT_SUCCESS,\n    GET_TEXT_FAIL,\n} from '../action-types';\n\nconst initialState = {\n    game: {\n        gameStatus: INIT,\n        finishGame: false,\n        time: 60,\n    },\n    textInfo: {\n        text: 'Click the button to get the text',\n        loading: false,\n        exist: true,\n        currentIndex: 0,\n        writtenLetter: null,\n        errors: [],\n    }\n};\n\nconst startGame = (state) => {\n    return update(state, {\n        game: {$merge: {\n                gameStatus: IN_PROGRESS,\n                finishGame: false\n            }},\n        textInfo: {$merge: {\n                currentIndex: 0,\n                writtenLetter: null,\n                errors: [],\n            }\n        }\n    })\n};\nconst finishGame = (state) => {\n    return update(state, {\n        game: {$merge: {\n                gameStatus: INIT,\n                finishGame: true\n            }},\n    })\n};\n\nconst changeTime = (state, payload) => {\n    const {time} = payload;\n    return update(state, {\n        game: {$merge: {\n                finishGame: false,\n                time,\n            }},\n    })\n};\n\nconst writeLetter = (state, payload) => {\n    const {letter} = payload;\n    return update(state, {\n        textInfo: {$merge: {\n                writtenLetter: letter,\n            }},\n        game: {$merge: {\n                finishGame: false,\n            }},\n    })\n};\nconst changeCurrentIndex = (state, payload) => {\n    const {index} = payload;\n    return update(state, {\n        textInfo: {$merge: {\n                currentIndex: index,\n            }},\n        game: {$merge: {\n                finishGame: false,\n            }},\n    })\n};\n\nconst collectErrors = (state, payload) => {\n    const {error} = payload;\n    const newErrors = [...state.textInfo.errors];\n    if (!newErrors.includes(error)) {\n        newErrors.push(error);\n    }\n\n    return update(state, {\n        textInfo: {$merge: {\n                errors: newErrors,\n            }},\n        game: {$merge: {\n                finishGame: false,\n            }},\n    })\n}\n\nconst getTextStart = (state) => {\n    return update(state, {\n        textInfo: {$merge: {\n                loading: true,\n                exist: false,\n            }},\n        game: {$merge: {\n                finishGame: false,\n            }},\n    })\n};\nconst getTextSuccess = (state, payload) => {\n    const {text} = payload;\n    return update(state, {\n        textInfo: {$merge: {\n                text,\n                loading: false,\n                exist: true,\n            }}\n    })\n};\nconst getTextFail = (state) => {\n    return update(state, {\n        textInfo: {$merge: {\n                loading: false,\n                exist: false,\n            }}\n    })\n};\n\nconst gameReducer = (state = initialState, action) => {\n    const {type, payload} = action;\n    switch (type) {\n        case START_GAME: return startGame(state);\n        case FINISH_GAME: return finishGame(state);\n        case WRITE_LETTER: return writeLetter(state, payload);\n        case CHANGE_CURRENT_INDEX: return changeCurrentIndex(state, payload);\n        case COLLECT_ERRORS: return collectErrors(state, payload);\n        case CHANGE_TIME: return changeTime(state, payload);\n\n        case GET_TEXT_START: return getTextStart(state);\n        case GET_TEXT_SUCCESS: return getTextSuccess(state, payload);\n        case GET_TEXT_FAIL: return getTextFail(state);\n\n        default: return state;\n    }\n};\n\nexport { gameReducer };","export const INIT = 0;\nexport const IN_PROGRESS = 1;","import update from 'react-addons-update';\n\n// action types\nimport {\n    GET_HISTORY_START,\n    GET_HISTORY_SUCCESS,\n    GET_HISTORY_FAIL,\n\n    CREATE_HISTORY_START,\n    CREATE_HISTORY_SUCCESS,\n    CREATE_HISTORY_FAIL,\n} from '../action-types';\n\nconst initialState = {\n    history: {\n        historyList: null,\n        loading: false,\n        exist: false,\n    },\n    historyCreate: {\n        loading: false,\n    },\n};\n\nconst getHistoryStart = (state) => {\n    return update(state, {\n        history: {$merge: {\n                loading: true,\n                exist: false,\n            }}\n    })\n};\nconst getHistorySuccess = (state, payload) => {\n    const {history} = payload;\n    return update(state, {\n        history: {$merge: {\n                historyList: history,\n                loading: false,\n                exist: true,\n            }}\n    })\n};\nconst getHistoryFail = (state) => {\n    return update(state, {\n        history: {$merge: {\n                loading: false,\n                exist: false,\n            }}\n    })\n};\n\nconst createHistoryStart = (state) => {\n    return update(state, {\n        historyCreate: {$merge: {\n                loading: true\n            }}\n    })\n};\nconst createHistorySuccess = (state) => {\n    return update(state, {\n        historyCreate: {$merge: {\n                loading: false\n            }}\n    })\n};\nconst createHistoryFail = (state) => {\n    return update(state, {\n        historyCreate: {$merge: {\n                loading: false\n            }}\n    })\n};\n\n\nconst historyReducer = (state = initialState, action) => {\n    const {type, payload} = action;\n    switch (type) {\n        case GET_HISTORY_START: return getHistoryStart(state);\n        case GET_HISTORY_SUCCESS: return getHistorySuccess(state, payload);\n        case GET_HISTORY_FAIL: return getHistoryFail(state);\n\n        case CREATE_HISTORY_START: return createHistoryStart(state);\n        case CREATE_HISTORY_SUCCESS: return createHistorySuccess(state);\n        case CREATE_HISTORY_FAIL: return createHistoryFail(state);\n\n        default: return state;\n    }\n};\n\nexport { historyReducer };","import { baseRequest } from '.';\n\nexport const getTextRequest = async (sentences) => {\n    const res = await baseRequest.get('/', {\n        params: {\n            type: 'all-meat',\n            sentences,\n        }\n    });\n    return res.data[0];\n}","import { historyRequest } from '.';\n\nexport const createHistoryRequest = async (history) => {\n    const res = await historyRequest.post('history.json', history);\n    return res;\n}\n\nexport const getHistoryRequest = async (history) => {\n    const res = await historyRequest.get('history.json');\n    return res.data;\n}","import axios from 'axios';\n\nexport const baseRequest = axios.create({\n    baseURL: 'https://baconipsum.com/api'\n});\n\nexport const historyRequest = axios.create({\n    baseURL: 'https://typeracer-62bf9.firebaseio.com/'\n});\n\nexport { getTextRequest } from './text';\nexport {\n    createHistoryRequest,\n    getHistoryRequest\n} from './history';","// action types\nimport {\n    START_GAME,\n    FINISH_GAME,\n    WRITE_LETTER,\n    CHANGE_CURRENT_INDEX,\n    COLLECT_ERRORS,\n    CHANGE_TIME,\n\n    GET_TEXT_INIT,\n    GET_TEXT_START,\n    GET_TEXT_SUCCESS,\n    GET_TEXT_FAIL,\n} from '../action-types';\n\nexport const startGame = () => {\n    return {\n        type: START_GAME\n    }\n};\nexport const finishGame = () => {\n    return {\n        type: FINISH_GAME\n    }\n};\n\nexport const changeTime = (time) => {\n    return {\n        type: CHANGE_TIME,\n        payload: {time}\n    }\n}\n\nexport const writeLetter = (letter) => {\n    return {\n        type: WRITE_LETTER,\n        payload: {letter}\n    }\n};\nexport const changeCurrentIndex = (index) => {\n    return {\n        type: CHANGE_CURRENT_INDEX,\n        payload: {index}\n    }\n};\n\nexport const collectErrors = (error) => {\n    return {\n        type: COLLECT_ERRORS,\n        payload: {error}\n    }\n}\n\nexport const getTextInit = (sentences) => {\n    return {\n        type: GET_TEXT_INIT,\n        payload: {sentences}\n    }\n}\nexport const getTextStart = () => {\n    return {\n        type: GET_TEXT_START\n    }\n};\nexport const getTextSuccess = (text) => {\n    return {\n        type: GET_TEXT_SUCCESS,\n        payload: {text}\n    }\n};\nexport const getTextFail = () => {\n    return {\n        type: GET_TEXT_FAIL\n    }\n};","// game\nexport const START_GAME = 'START_GAME';\nexport const FINISH_GAME = 'FINISH_GAME';\nexport const WRITE_LETTER = 'WRITE_LETTER';\nexport const CHANGE_CURRENT_INDEX = 'CHANGE_CURRENT_INDEX';\nexport const COLLECT_ERRORS = 'COLLECT_ERRORS';\nexport const CHANGE_TIME = 'CHANGE_TIME';\n\n// fetch text\nexport const GET_TEXT_INIT = 'GET_TEXT_INIT';\nexport const GET_TEXT_START = 'GET_TEXT_START';\nexport const GET_TEXT_SUCCESS = 'GET_TEXT_SUCCESS';\nexport const GET_TEXT_FAIL = 'GET_TEXT_FAIL';\n\n// fetch history\nexport const GET_HISTORY_INIT = 'GET_HISTORY_INIT';\nexport const GET_HISTORY_START = 'GET_HISTORY_START';\nexport const GET_HISTORY_SUCCESS = 'GET_HISTORY_SUCCESS';\nexport const GET_HISTORY_FAIL = 'GET_HISTORY_FAIL';\n\n// create history\nexport const CREATE_HISTORY_INIT = 'CREATE_HISTORY_INIT';\nexport const CREATE_HISTORY_START = 'CREATE_HISTORY_START';\nexport const CREATE_HISTORY_SUCCESS = 'CREATE_HISTORY_SUCCESS';\nexport const CREATE_HISTORY_FAIL = 'CREATE_HISTORY_FAIL';","// saga effects\nimport {\n    put,\n    takeEvery,\n    all,\n} from 'redux-saga/effects';\n\n// http services\nimport { getTextRequest } from '../../services/httpServices';\n\n// action types\nimport { GET_TEXT_INIT } from '../action-types';\n\n// actions\nimport {\n    getTextStart,\n    getTextSuccess,\n    getTextFail,\n} from './action';\n\n\nfunction* getText(action) {\n    const {payload: {sentences}} = action;\n    yield put(getTextStart());\n    try {\n        const text = yield getTextRequest(sentences);\n        yield put(getTextSuccess(text));\n    } catch (err) {\n        console.log('Something Wrong');\n        put(getTextFail());\n    }\n}\n\nexport function* gameSaga() {\n    yield all([\n        takeEvery(GET_TEXT_INIT, getText),\n    ]);\n}","// action types\nimport {\n    GET_HISTORY_INIT,\n    GET_HISTORY_START,\n    GET_HISTORY_SUCCESS,\n    GET_HISTORY_FAIL,\n\n    CREATE_HISTORY_INIT,\n    CREATE_HISTORY_START,\n    CREATE_HISTORY_SUCCESS,\n    CREATE_HISTORY_FAIL,\n} from '../action-types';\n\nexport const getHistoryInit = () => {\n    return {\n        type: GET_HISTORY_INIT\n    }\n};\nexport const getHistoryStart = () => {\n    return {\n        type: GET_HISTORY_START\n    }\n};\nexport const getHistorySuccess = (history) => {\n    return {\n        type: GET_HISTORY_SUCCESS,\n        payload: {history}\n    }\n};\nexport const getHistoryFail = () => {\n    return {\n        type: GET_HISTORY_FAIL\n    }\n};\n\nexport const createHistoryInit = (history) => {\n    return {\n        type: CREATE_HISTORY_INIT,\n        payload: {history}\n    }\n}\nexport const createHistoryStart = () => {\n    return {\n        type: CREATE_HISTORY_START\n    }\n};\nexport const createHistorySuccess = () => {\n    return {\n        type: CREATE_HISTORY_SUCCESS\n    }\n};\nexport const createHistoryFail = () => {\n    return {\n        type: CREATE_HISTORY_FAIL\n    }\n};","// saga effects\nimport {\n    put,\n    takeEvery,\n    all,\n} from 'redux-saga/effects';\n\n// http services\nimport {\n    createHistoryRequest,\n    getHistoryRequest\n} from '../../services/httpServices';\n\n// action types\nimport {\n    GET_HISTORY_INIT,\n    CREATE_HISTORY_INIT,\n} from '../action-types';\n\n// actions\nimport {\n    getHistoryStart,\n    getHistorySuccess,\n    getHistoryFail,\n\n    createHistoryStart,\n    createHistorySuccess,\n    createHistoryFail,\n} from './action';\n\n\nfunction* getHistory() {\n    yield put(getHistoryStart());\n    try {\n        const history = yield getHistoryRequest();\n        if (!history) {\n            throw new Error('History Null')\n        }\n        yield put(getHistorySuccess(history));\n    } catch (err) {\n        console.log('Something Wrong');\n        yield put(getHistoryFail());\n    }\n}\n\nfunction* createHistory(action) {\n    const {payload: {history}} = action;\n    yield put(createHistoryStart());\n    try {\n        yield createHistoryRequest(history);\n        yield put(createHistorySuccess());\n    } catch (err) {\n        console.log('Something Wrong');\n        yield put(createHistoryFail());\n    }\n}\n\n\nexport function* historySaga() {\n    yield all([\n        takeEvery(GET_HISTORY_INIT, getHistory),\n        takeEvery(CREATE_HISTORY_INIT, createHistory),\n    ]);\n}","// saga effects\nimport { all } from 'redux-saga/effects';\n\n// sagas\nimport { gameSaga } from './game/saga';\nimport { historySaga } from './history/saga';\n\n\nexport function* watchSaga() {\n    yield all([\n        gameSaga(),\n        historySaga(),\n    ])\n}","import {\n    createStore,\n    combineReducers,\n    applyMiddleware\n} from 'redux';\n\n// Reducers\nimport { gameReducer } from './game/reducer';\nimport { historyReducer } from './history/reducer';\n\n// sagas\nimport createSagaMiddleware from 'redux-saga';\nimport { watchSaga } from './saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n    gameReducer,\n    historyReducer,\n});\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(watchSaga);","import React from 'react';\n\n// router\nimport {\n    HashRouter,\n    Route,\n    Switch,\n} from 'react-router-dom';\n\n// containers\nimport {\n    History,\n    TypeRacer,\n} from '.';\n\n\nconst Routers = () => {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path='/' component={TypeRacer} />\n                <Route exact path='/history' component={History} />\n            </Switch>\n        </HashRouter>\n    );\n};\n\n\nexport { Routers };","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'react-addons-update';\n\n// classes\nimport classes from './KeyboardButton.module.scss';\nimport classNames from 'classnames';\n\n\nconst KeyboardButton = (props) => {\n    const [keyboardClasses, setKeyboardClasses] = useState([classes.keyboardButton]);\n    const {\n        id,\n        value,\n        style,\n        src,\n        currentIndex,\n        text,\n        onChangeCurrentIndex,\n        onWriteLetter,\n        onFinishGame,\n        onCollectErrors,\n    } = props;\n\n    useEffect(() => {\n        createEventListener();\n        return () => removeEventListener();\n    });\n\n    const onKeyDown = (event) => {\n        if (id === event.keyCode) {\n            const newKeyboardClasses = update(keyboardClasses, {\n                $splice: [[1, 0, classes.isSubmit]]\n            });\n            setKeyboardClasses(newKeyboardClasses);\n        }\n    };\n    const onKeyUp = (event) => {\n        const {key, keyCode} = event;\n        if (id === keyCode) {\n            onWriteLetter(key);\n\n            const newKeyboardClasses = update(keyboardClasses, {\n                $splice: [[keyboardClasses.length-1, 1]]\n            });\n            setKeyboardClasses(newKeyboardClasses);\n\n            if (currentIndex === text.length-1) {\n                onFinishGame();\n            } else {\n                if (text[currentIndex] === key) {\n                    onChangeCurrentIndex(currentIndex + 1);\n                }\n                if (text[currentIndex] !== key && key !== 'Shift') {\n                    if (text[currentIndex] !== ' ') {\n                        onCollectErrors(currentIndex);\n                    }\n                }\n            }\n        }\n    };\n\n    const createEventListener = () => {\n        document.addEventListener('keydown', onKeyDown);\n        document.addEventListener('keyup', onKeyUp);\n    }\n\n    const removeEventListener = () => {\n        document.removeEventListener('keydown', onKeyDown);\n        document.removeEventListener('keyup', onKeyUp);\n    }\n\n    return (\n        <span\n            id={id}\n            style={style}\n            className={classNames(keyboardClasses)}\n        >\n            {src ? <img src={src} className={classes.pt} alt='arrow left' /> : value}\n        </span>\n    )\n}\n\n\nKeyboardButton.propTypes = {\n    id: PropTypes.number.isRequired,\n    value: PropTypes.string,\n    style: PropTypes.object,\n    src: PropTypes.string,\n};\n\nexport { KeyboardButton }","import React from 'react';\n\n// classes\nimport classes from './Keyboard.module.scss';\n\n// components\nimport { KeyboardButton } from '.';\n\n\nconst Keyboard = (props) => {\n    const {\n        keyboardButtons,\n        currentIndex,\n        text,\n        onChangeCurrentIndex,\n        onWriteLetter,\n        onFinishGame,\n        onCollectErrors,\n    } = props;\n    const sectionKeys = Object.keys(keyboardButtons);\n\n    const keyboard = sectionKeys\n        .map(sectionKey => {\n            const keyboardButtonEls = keyboardButtons[sectionKey]\n                .map(sectionValue => (\n                    <KeyboardButton\n                        key={sectionValue.id}\n                        currentIndex={currentIndex}\n                        text={text}\n                        onChangeCurrentIndex={onChangeCurrentIndex}\n                        onWriteLetter={onWriteLetter}\n                        onFinishGame={onFinishGame}\n                        onCollectErrors={onCollectErrors}\n                        {...sectionValue} />\n                ));\n\n            return (\n                <div key={sectionKey} className={classes.keyboard__section}>\n                    {keyboardButtonEls}\n                </div>\n            )\n        });\n\n    return (\n        <section className={classes.keyboard}>\n            {keyboard}\n        </section>\n    )\n}\n\nexport { Keyboard }","import React from 'react';\n\n//constants\nimport { INIT } from '../../constants/gameStatus';\n\n// classes\nimport classes from './Result.module.scss';\n\n\nconst Result = (props) => {\n    const {\n        time,\n        status,\n        text,\n        currentIndex,\n        errors,\n        gameFinish,\n        onCreateHistory,\n    } = props;\n\n    const viewErrorCount = errors.length;\n    let completionPercent = (currentIndex / text.length) * 100;\n    completionPercent = Math.ceil(completionPercent);\n    if (currentIndex === text.length - 1) {\n        completionPercent = 100;\n    }\n\n    let wpm = 0;\n    if (currentIndex !== 0 && time !== 60) {\n        wpm = Math.round((currentIndex/5) / ((60 - time)/60));\n    }\n\n    if (status === INIT && gameFinish) {\n        const history = {\n            speed: wpm,\n            errorCount: viewErrorCount,\n            completionPercent: completionPercent,\n        };\n        onCreateHistory(history)\n    }\n\n    return (\n        <div>\n            <div className={classes.result}>\n                <span>Speed: <strong>{wpm} WPM</strong></span>\n                <span>Completion percent: <strong>{completionPercent} %</strong></span>\n                <span>Errors: <strong>{viewErrorCount}</strong></span>\n            </div>\n        </div>\n    )\n}\n\nexport { Result }","import React, { useEffect, useState } from 'react';\n\n// game status\nimport { IN_PROGRESS } from '../../constants/gameStatus';\n\n// classes\nimport classNames from 'classnames';\nimport classes from './Timer.module.scss';\n\n\nconst Timer = (props) => {\n    const {\n        status, // 'init', 'in-progress\n        initialTime,\n        onFinish,\n        onChange,\n    } = props;\n\n    const [time, setTime] = useState(initialTime);\n\n    useEffect(() => {\n        if (status === IN_PROGRESS) {\n            startClock();\n        }\n    }, []);\n\n    useEffect(() => {\n        if (time === 0) {\n            onFinish();\n        } else {\n            startClock(time);\n            onChange(time);\n        }\n\n    }, [time])\n\n    useEffect(() => {\n        if (status === IN_PROGRESS) {\n            startClock(initialTime);\n        }\n    }, [status]);\n\n    const startClock = (_time = time) => {\n        if (_time !== time) {\n            setTime(_time);\n        }\n        const tik = () => {\n            setTimeout(() => {\n                if (status === IN_PROGRESS) {\n                    setTime(_time - 1)\n                }\n            }, 1000);\n        }\n        tik();\n    }\n\n    return <div\n        className={\n            classNames(classes.timer, {\n                [classes.orangeBg]: time <= 20,\n                [classes.redBg]: time === 0,\n            })\n        }\n    >\n        {time}\n    </div>\n}\n\nexport { Timer }","import React from 'react';\n\n// classes\nimport classes from './ShowInfo.module.scss';\n\n\nconst ShowInfo = () => {\n    return (\n        <section className={classes.showText}>\n            <h2>Start Touch Typing</h2>\n            <p>This worth-learning skill will make your work much more productive. Moreover, it's an interactive and engaging game that can teach you how to type.</p>\n        </section>\n    )\n}\n\nexport { ShowInfo }","import React from 'react';\n\n// classes\nimport classes from './Letter.module.scss';\nimport classNames from 'classnames';\n\n\nconst Letter = (props) => {\n    const {\n        letter,\n        currentLetter,\n        isError,\n    } = props;\n\n    return (\n        <span\n            className={\n                classNames(classes.letter, {\n                    [classes.space]: letter === ' ',\n                    [classes.current]: currentLetter,\n                    [classes.error]: isError,\n                })\n            }\n        >\n            {letter}\n        </span>\n    )\n}\n\nexport { Letter }","import React from 'react';\n\n// classes\nimport classes from './ViewText.module.scss';\n\n// components\nimport { Letter } from '.';\n\n\nconst ViewText = (props) => {\n    const {\n        currentIndex,\n        text,\n        errors,\n    } = props;\n\n    const letters = text.split('').map((letter,i) => {\n        const currentLetter = currentIndex === i;\n\n        return (\n            <Letter\n                key={letter+i}\n                letter={letter}\n                currentLetter={currentLetter}\n                isError={errors.includes(i)}\n            />\n        )\n    });\n\n    return (\n        <div className={classes.center}>\n            {letters}\n        </div>\n    )\n}\n\nexport { ViewText }","import React from 'react';\n\n// classes\nimport classes from './ViewHistory.module.scss';\n\n\nconst ViewHistory = (props) => {\n    const {historyList} = props;\n\n    const history = historyList.map((history, i) => {\n       const {completionPercent, errorCount, speed} = history;\n       return (\n           <div key={i} className={classes.historySection__history}>\n               <h3>Game: {i+1}</h3>\n               <p>Speed: {speed} WPM</p>\n               <p>Completion percent: {completionPercent} %</p>\n               <p>Errors: {errorCount}</p>\n           </div>\n       )\n    });\n\n    return (\n        <section className={classes.historySection}>\n            {history}\n        </section>\n    )\n}\n\nexport { ViewHistory }","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// game status\nimport { INIT } from '../../constants/gameStatus';\n\n// actions\nimport {\n    getTextInit,\n    startGame,\n} from '../../store/game/action';\n\n// classes\nimport classes from './TypeRacer.module.scss';\n\n// containers\nimport {\n    KeyboardSection,\n    ResultSection,\n    TextSection,\n} from '..';\nimport { ShowInfo } from '../../components';\n\n\nclass TypeRacer extends React.Component {\n    render() {\n        const {\n            startGame,\n            getText,\n            status,\n        } = this.props;\n\n        const start = () => {\n            startGame();\n            getText(1);\n        }\n\n        let startBtn = null;\n        if (status === INIT) {\n            startBtn = (\n                <div className={classes.main__startBtn}>\n                    <span onClick={start}>Click on me to start typing</span>\n                </div>\n            )\n        }\n\n        let checkoutButton = (\n            <div className={classes.disabled}>\n                <span>Click on me to see game history</span>\n            </div>\n        )\n        if (status === INIT) {\n            checkoutButton = (\n                <div className={classes.main__history}>\n                    <Link to='/history'>Click on me to see game history</Link>\n                </div>\n            )\n        }\n\n        return (\n            <main className={classes.main}>\n                <h1 className={classes.main__title}>Type Racer</h1>\n                {checkoutButton}\n                <ResultSection />\n                <TextSection />\n                {startBtn}\n                <KeyboardSection />\n                <ShowInfo />\n            </main>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        status: state.gameReducer.game.gameStatus,\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        startGame: () => dispatch(startGame()),\n        getText: (sentences) => dispatch(getTextInit(sentences))\n    }\n};\n\nconst TypeRacerWrapper = connect(mapStateToProps, mapDispatchToProps)(TypeRacer);\nexport {TypeRacerWrapper as TypeRacer}","export const KEYBOARD_BUTTONS = {\n    section1: [\n        {id: 192, value: '`'},\n        {id: 49, value: '1'},\n        {id: 50, value: '2'},\n        {id: 51, value: '3'},\n        {id: 52, value: '4'},\n        {id: 53, value: '5'},\n        {id: 54, value: '6'},\n        {id: 55, value: '7'},\n        {id: 56, value: '8'},\n        {id: 57, value: '9'},\n        {id: 48, value: '0'},\n        {id: 189, value: '-'},\n        {id: 187, value: '='},\n        {\n            id: 8,\n            src: 'https://img.icons8.com/metro/26/000000/arrow-pointing-left.png',\n            style: {paddingLeft: 20+'px', paddingRight:20+'px'}\n        },\n    ],\n    section2: [\n        {\n            id: 9,\n            value: 'tab',\n            style: {paddingLeft: 20+'px', paddingRight:20+'px'}\n        },\n        {id: 81, value: 'Q'},\n        {id: 87, value: 'W'},\n        {id: 69, value: 'E'},\n        {id: 82, value: 'R'},\n        {id: 84, value: 'T'},\n        {id: 89, value: 'Y'},\n        {id: 85, value: 'U'},\n        {id: 73, value: 'I'},\n        {id: 79, value: 'O'},\n        {id: 80, value: 'P'},\n        {id: 219, value: '['},\n        {id: 221, value: ']'},\n        {id: 220, value: '\\\\'},\n    ],\n    section3: [\n        {\n            id: 20,\n            value: 'caps',\n            style: {paddingLeft: 30+'px', paddingRight:30+'px'}\n        },\n        {id: 65, value: 'A'},\n        {id: 83, value: 'S'},\n        {id: 68, value: 'D'},\n        {id: 70, value: 'F'},\n        {id: 71, value: 'G'},\n        {id: 72, value: 'H'},\n        {id: 74, value: 'J'},\n        {id: 75, value: 'K'},\n        {id: 76, value: 'L'},\n        {id: 186, value: ';'},\n        {id: 222, value: \"'\"},\n        {\n            id: 13,\n            value: 'enter',\n            style: {paddingLeft: 30+'px', paddingRight:30+'px'}\n        },\n    ],\n    section4: [\n        {\n            id: 16,\n            value: 'shift',\n            style: {paddingLeft: 40+'px', paddingRight:40+'px'}\n        },\n        {id: 90, value: 'Z'},\n        {id: 88, value: 'X'},\n        {id: 67, value: 'C'},\n        {id: 86, value: 'V'},\n        {id: 66, value: 'B'},\n        {id: 78, value: 'N'},\n        {id: 77, value: 'M'},\n        {id: 188, value: ','},\n        {id: 190, value: '.'},\n        {id: 191, value: '/'},\n        {\n            id: 1666,\n            value: 'shift',\n            style: {paddingLeft: 40+'px', paddingRight: 40+'px'}\n        },\n    ],\n    section5: [\n        {\n            id: 32,\n            value: '',\n            style: {paddingLeft: 200+'px', paddingRight:200+'px', margin: 'auto'}\n        },\n    ],\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\n// actions\nimport {\n    writeLetter,\n    changeCurrentIndex,\n    finishGame,\n    collectErrors,\n} from '../../store/game/action';\n\n// images\nimport keyboard from '../../assets/images/keyboard.webp';\n\n// constants\nimport { KEYBOARD_BUTTONS } from '../../constants/kayboard';\nimport { IN_PROGRESS } from '../../constants/gameStatus';\n\n// components\nimport { Keyboard } from '../../components';\n\n\nclass KeyboardSection extends React.Component {\n    finishGame = () => {\n        const {onFinishGame} = this.props;\n        onFinishGame();\n    }\n\n    render() {\n        const {\n            status,\n            currentIndex,\n            text,\n            onWriteLetter,\n            onChangeCurrentIndex,\n            onCollectErrors,\n        } = this.props;\n\n        let viewKeyboard = <div style={{textAlign: 'center'}}><img src={keyboard} alt='Keyboard' /></div>;\n        if (status === IN_PROGRESS) {\n            viewKeyboard = (\n                <Keyboard\n                    keyboardButtons={KEYBOARD_BUTTONS}\n                    currentIndex={currentIndex}\n                    text={text}\n                    onChangeCurrentIndex={onChangeCurrentIndex}\n                    onWriteLetter={onWriteLetter}\n                    onFinishGame={this.finishGame}\n                    onCollectErrors={onCollectErrors}\n                />\n            )\n        }\n\n        return viewKeyboard;\n    }\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        status: state.gameReducer.game.gameStatus,\n        currentIndex: state.gameReducer.textInfo.currentIndex,\n        text: state.gameReducer.textInfo.text,\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onWriteLetter: (letter) => dispatch(writeLetter(letter)),\n        onChangeCurrentIndex: (index) => dispatch(changeCurrentIndex(index)),\n        onFinishGame: () => dispatch(finishGame()),\n        onCollectErrors: (error) => dispatch(collectErrors(error))\n    }\n};\n\nconst KeyboardSectionWrapper = connect(mapStateToProps, mapDispatchToProps)(KeyboardSection);\nexport {KeyboardSectionWrapper as KeyboardSection}","import React from 'react';\nimport { connect } from 'react-redux';\n\n// action\nimport { finishGame, changeTime } from '../../store/game/action';\nimport { createHistoryInit } from '../../store/history/action';\n\n// classes\nimport classes from './ResultSection.module.scss';\n\n// components\nimport {\n    Result,\n    Timer\n} from '../../components';\n\n\nclass ResultSection extends React.Component {\n    createHistory = (history) => {\n        const {onCreateHistory} = this.props;\n        onCreateHistory(history);\n    }\n\n    render() {\n        const {\n            time,\n            status,\n            gameFinish,\n            text,\n            currentIndex,\n            errors,\n            finishGame,\n            onChangeTime,\n        } = this.props;\n\n        return (\n                <section className={classes.resultSection}>\n                    <Result\n                        time={time}\n                        gameFinish={gameFinish}\n                        status={status}\n                        text={text}\n                        currentIndex={currentIndex}\n                        errors={errors}\n                        onCreateHistory={this.createHistory}\n                    />\n                    <Timer\n                        onFinish={finishGame}\n                        status={status}\n                        initialTime={60}\n                        onChange={onChangeTime}\n                    />\n                </section>\n            );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        status: state.gameReducer.game.gameStatus,\n        gameFinish: state.gameReducer.game.finishGame,\n        time: state.gameReducer.game.time,\n        text: state.gameReducer.textInfo.text,\n        currentIndex: state.gameReducer.textInfo.currentIndex,\n        errors: state.gameReducer.textInfo.errors,\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        finishGame: () => dispatch(finishGame()),\n        onCreateHistory: (history) => dispatch(createHistoryInit(history)),\n        onChangeTime: (time) => dispatch(changeTime(time))\n    }\n};\n\nconst ResultSectionWrapper = connect(mapStateToProps, mapDispatchToProps)(ResultSection);\nexport {ResultSectionWrapper as ResultSection}","import React from 'react';\nimport { connect } from 'react-redux';\n\n// classes\nimport classes from './TextSection.module.scss';\n\n// components\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport { ViewText } from '../../components';\n\n\nclass TextSection extends React.Component {\n    render() {\n        const {\n            textInfo: {loading, exist, text},\n            currentIndex,\n            errors,\n        } = this.props;\n\n        let viewText = null;\n        if (loading) {\n            viewText = <div style={{textAlign: 'center'}}><BeatLoader /></div>\n        }\n        if (exist) {\n            viewText = (\n                <ViewText\n                    currentIndex={currentIndex}\n                    text={text}\n                    errors={errors}\n                />\n            )\n        }\n\n        return <div className={classes.textContainer}>{viewText}</div>\n    }\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        textInfo: state.gameReducer.textInfo,\n        currentIndex: state.gameReducer.textInfo.currentIndex,\n        errors: state.gameReducer.textInfo.errors,\n    }\n};\n\nconst TextSectionWrapper = connect(mapStateToProps, null)(TextSection);\nexport {TextSectionWrapper as TextSection}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// action\nimport { getHistoryInit } from '../../store/history/action';\n\n// classes\nimport classes from './History.module.scss';\n\n// components\nimport { ViewHistory } from '../../components';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\n\nclass History extends React.Component {\n    componentDidMount() {\n        const {getHistory} = this.props;\n        getHistory();\n    }\n\n    render() {\n        const {history: {historyList, loading, exist}} = this.props;\n\n        let viewHistory;\n        if (exist) {\n            const history = Object.values(historyList);\n            viewHistory = <ViewHistory historyList={history} />\n        } else {\n            viewHistory = <div className={classes.noHistory}>There is no history</div>\n        }\n        if (loading) {\n            viewHistory = <div style={{textAlign: 'center'}}><ClipLoader /></div>\n        }\n\n        return (\n                <main className={classes.history}>\n                    <h1 className={classes.history__title}>History</h1>\n                    <div className={classes.history__game}>\n                        <Link to='/'>Click on me to return the game</Link>\n                    </div>\n\n                    {viewHistory}\n                </main>\n            );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        history: state.historyReducer.history\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getHistory: () => dispatch(getHistoryInit()),\n    }\n};\n\n\nconst HistoryWrapper = connect(mapStateToProps, mapDispatchToProps)(History);\nexport {HistoryWrapper as History}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { Routers } from './containers';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <Routers />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TypeRacer_main__2cvZ4\",\"main__title\":\"TypeRacer_main__title__3cjDr\",\"main__history\":\"TypeRacer_main__history__3F_59\",\"main__startBtn\":\"TypeRacer_main__startBtn__Ik59J\",\"disabled\":\"TypeRacer_disabled__3sRev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"letter\":\"Letter_letter__25EZB\",\"space\":\"Letter_space__2L5Ls\",\"current\":\"Letter_current___XHPG\",\"error\":\"Letter_error__1Ii8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"History_history__3e_Vy\",\"history__title\":\"History_history__title__2aUWK\",\"history__game\":\"History_history__game__3YpCe\",\"noHistory\":\"History_noHistory__20ZuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyboardButton\":\"KeyboardButton_keyboardButton__3hqIT\",\"isSubmit\":\"KeyboardButton_isSubmit__31wX3\",\"pt\":\"KeyboardButton_pt__3q6Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__RB9b3\",\"orangeBg\":\"Timer_orangeBg__1OAbA\",\"redBg\":\"Timer_redBg__2gUhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyboard\":\"Keyboard_keyboard__N58Qi\",\"keyboard__section\":\"Keyboard_keyboard__section__1m5op\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"historySection\":\"ViewHistory_historySection__3lNg5\",\"historySection__history\":\"ViewHistory_historySection__history__2zchI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"Result_result__bzLfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showText\":\"ShowInfo_showText__2M6BN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"ViewText_center__2Bjyo\"};","module.exports = __webpack_public_path__ + \"static/media/keyboard.3986a100.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultSection\":\"ResultSection_resultSection__1Q2RJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textContainer\":\"TextSection_textContainer__3S759\"};"],"sourceRoot":""}